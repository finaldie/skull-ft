#!/bin/bash

# Global Variables
case_path=""
case_arg=""
case_list=()
bin_path=""

debug_mode=false
title_length=20
skip_arg=""
skip_list=()

passed_cases=0
failed_cases=0
total_cases=0
skipped_cases=0

python_path=${python_path:-/usr/bin/python3}

# ============= Internal Functions ==============
function usage()
{
    echo "Usage:"
    echo " - skull-ft -p case_path [-n case[,case2]] [-l title_length] [-D] [--skip case[,case2]]"
}

function should_skip()
{
    local caseName=$1

    for c in ${skip_list[@]}; do
        if [ "$c" = "$caseName" ]; then
            return 0
        fi
    done

    return 1
}

function runOneCase()
{
    # 1. Enter case running folder
    local config="skull_ft_case.yml"
    local topdir=`pwd`
    local caseName=$1
    local casedir="$topdir/cases/$caseName"
    local rundir=$topdir/run/$caseName
    local caseconf="$casedir/$config"
    local logfile="$rundir/output.txt"

    if [ "$topdir" = "/" ]; then
        echo "Error: case topdir is '/', move it to other folder"
        return 1
    fi

    if [ ! -f "$caseconf" ]; then
        echo "Error: not found $caseconf, skip this case"
        return 0
    fi

    if $(should_skip $caseName); then
        printf "Run case [%-${title_length}s] ... Skipped\n" $caseName
        skipped_cases=$((skipped_cases + 1))
        return 0
    fi

    if [ -d "$rundir" ]; then
        rm -rf "$rundir"
    fi
    mkdir -p "$rundir"

    # 2. Run Case
    printf "Run case [%-${title_length}s] ... " $caseName
    local start_time=`date +%s`
    (
        cd "$rundir"
        $python_path $bin_path/skull-case-executor.py -t $topdir -n $caseName -c $caseconf || exit 1
    ) 2>&1 | tee -a $logfile ;

    # 3. Generate result
    local ret=$?
    local end_time=`date +%s`
    local duration=$((end_time - start_time))
    total_cases=$((total_cases + 1))

    if [ $ret -eq 0 ]; then
        passed_cases=$((passed_cases + 1))
        echo "OK ${duration}s"
    else
        failed_cases=$((failed_cases + 1))
        echo "Failed! ${duration}s Check the log file $logfile for the details"

        if $debug_mode; then
            echo ">>>>>>>>>>>>>>>>>> Diagnosis for $caseName >>>>>>>>>>>>>>>>>>"
            cat $logfile
            echo ">>>>>>>>>>>>>>>>>> Diagnosis for $caseName End >>>>>>>>>>>>>>>>>>"
        fi
    fi
}

function runAllCases()
{
    local cases=($@)

    for caseName in "${cases[@]}"; do
        if [ -z "$caseName" ]; then
            echo "'case name' is empty, skip it"
            continue
        fi

        if [ ! -d "cases/$caseName" ]; then
            echo "case ["$caseName"] is not a folder, skip it"
            continue
        fi

        runOneCase "$caseName"
    done
}

function runCases()
{
    local start_time=`date +%s`

    # 1. Enter case path
    cd "$case_path"

    # 2. Run all cases or one case
    if [ ! -z "$case_arg" ]; then
        IFS=',' read -r -a case_list <<< "$case_arg"
    else
        case_list=(`ls -1 "cases"`)
    fi

    if $debug_mode; then
        echo "Case list: ${case_list[@]}"
    fi

    runAllCases ${case_list[@]}

    # 3. Generate a report
    local end_time=`date +%s`
    local duration=$((end_time - start_time))
    echo "----"
    echo "Test Done. Totally ${duration}s"
    echo "Passed/Total: ${passed_cases}/${total_cases} Failed: $failed_cases Skipped: $skipped_cases"

    if [ $failed_cases -gt 0 ]; then
        return 1
    fi
}

function signal_handler()
{
    local ret=$1
    subjobs=`jobs -l | awk '{print $2}'`
    if [ ! -z "$subjobs" ]; then
        echo "$subjobs" | xargs kill
    fi

    exit $ret
}

# ============= main ==============
trap signal_handler SIGHUP SIGINT SIGTERM

# 1. Check args
if [ $# = 0 ]; then
    echo "Missing 'case path' arg"
    usage
    exit 1
fi

while true; do
    case "$1" in
        (-p)
            case_path=$2
            shift 2
            ;;
        (-n)
            case_arg=$2
            shift 2
            ;;
        (-D)
            debug_mode=true
            shift
            ;;
        (-l)
            title_length=$2
            shift 2
            ;;
        (--skip)
            skip_arg=$2
            shift 2
            ;;
        (*)
            break
            ;;
    esac
done

# Export this var to subshells
export debug_mode

if [ ! -z "$SKULLFT_BINPATH" ]; then
    bin_path="$SKULLFT_BINPATH"
else
    bin_path=`dirname $0`
    bin_path=`readlink -e $bin_path` # Get absolute path of the 'bin_path'
fi

# 2. Basic arg validation
if [ -z "$case_path" ]; then
    echo "Error: case path is empty, cannot run case"
    exit 1
fi

if [ ! -d "$case_path" ]; then
    echo "Error: case path ["$case_path"] is not a folder, cannot run case"
    exit 1
fi

if [ "$case_path" = "/" ]; then
    echo "Error: case_path($case_path) is '/', cannot run the cases. Move it to other folder"
    exit 1
fi

if [ ! -z "$skip_arg" ]; then
    IFS=',' read -r -a skip_list <<< "$skip_arg"

    echo "Skip list: $skip_arg"
fi

# 3. Run Cases
runCases
